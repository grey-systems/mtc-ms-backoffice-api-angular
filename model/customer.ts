/**
 * mtc-backoffice-api
 * MTC Backoffice Composite Api
 *
 * OpenAPI spec version: 0.1.0-SNAPSHOT
 * Contact: developers@greysystems.eu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


export interface Customer { 
    accumulatedReceivingValue?: number;
    accumulatedSendingValue?: number;
    address?: string;
    birthCity?: number;
    birthCountry?: string;
    birthDate?: string;
    citiesAdminDivisionId?: number;
    city?: number;
    civilRegistrationNumber?: string;
    civilStatus?: string;
    code?: string;
    codeExternal?: string;
    company?: string;
    country?: string;
    countryNationality?: string;
    creationDate?: Date;
    creationUser?: string;
    email?: string;
    familyType?: number;
    familyTypeDetails?: string;
    fathersName?: string;
    firstName?: string;
    fiscalCode?: string;
    fiscalCodeType?: string;
    hasCivilRegistrationNumber?: boolean;
    haveInps?: boolean;
    id?: number;
    idPartnerSystem?: number;
    labourUniqueIdCodeNumber?: string;
    labourUniqueIdCodeType?: string;
    lastName?: string;
    lastReceivingDate?: Date;
    lastSendingDate?: Date;
    mobile?: string;
    modificationDate?: Date;
    modificationUser?: string;
    mothersName?: string;
    normalizedName?: string;
    numberOfReceiving?: number;
    numberOfSending?: number;
    occupation?: string;
    payTaxInOtherCountries?: boolean;
    pep?: boolean;
    periodicityType?: Customer.PeriodicityTypeEnum;
    postalCode?: string;
    privacy?: boolean;
    professionalSituation?: number;
    registerHomeTransfer?: boolean;
    resident?: boolean;
    riskProfile?: string;
    sellerCode?: string;
    sendSms?: boolean;
    sex?: Customer.SexEnum;
    status?: Customer.StatusEnum;
    streetLetter?: string;
    streetNumber?: number;
    telephone?: string;
    type?: Customer.TypeEnum;
    watched?: Customer.WatchedEnum;
}
export namespace Customer {
    export type PeriodicityTypeEnum = 'Occasional' | 'Habitual';
    export const PeriodicityTypeEnum = {
        Occasional: 'Occasional' as PeriodicityTypeEnum,
        Habitual: 'Habitual' as PeriodicityTypeEnum
    };
    export type SexEnum = 'Male' | 'Female';
    export const SexEnum = {
        Male: 'Male' as SexEnum,
        Female: 'Female' as SexEnum
    };
    export type StatusEnum = 'Active' | 'Unactive' | 'Blocked' | 'Unblocked';
    export const StatusEnum = {
        Active: 'Active' as StatusEnum,
        Unactive: 'Unactive' as StatusEnum,
        Blocked: 'Blocked' as StatusEnum,
        Unblocked: 'Unblocked' as StatusEnum
    };
    export type TypeEnum = 'Local' | 'Remote';
    export const TypeEnum = {
        Local: 'Local' as TypeEnum,
        Remote: 'Remote' as TypeEnum
    };
    export type WatchedEnum = 'Watched' | 'Unwatched';
    export const WatchedEnum = {
        Watched: 'Watched' as WatchedEnum,
        Unwatched: 'Unwatched' as WatchedEnum
    };
}

/**
 * mtc-backoffice-api
 * MTC Backoffice Composite Api
 *
 * OpenAPI spec version: 0.1.0-SNAPSHOT
 * Contact: developers@greysystems.eu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { AgentBasic } from './agentBasic';
import { FinancialData } from './financialData';
import { TransferCustomer } from './transferCustomer';
import { TransferDestination } from './transferDestination';


export interface FullTransferDetails { 
    agentInfo?: AgentBasic;
    blockStatus?: FullTransferDetails.BlockStatusEnum;
    channel?: FullTransferDetails.ChannelEnum;
    customerLocal?: TransferCustomer;
    customerRemote?: TransferCustomer;
    deliveryMode?: FullTransferDetails.DeliveryModeEnum;
    destinationCountry?: string;
    financialData?: FinancialData;
    hasIncidents?: boolean;
    id?: number;
    idAgent?: number;
    idCustomerRelationship?: number;
    idPurposeOfSending?: number;
    messageForBeneficiary?: string;
    operationDate?: Date;
    originOfFunds?: string;
    transactionCode?: string;
    transferDestination?: TransferDestination;
    transferStatus?: FullTransferDetails.TransferStatusEnum;
    type?: FullTransferDetails.TypeEnum;
    urn?: string;
    watchedStatus?: FullTransferDetails.WatchedStatusEnum;
}
export namespace FullTransferDetails {
    export type BlockStatusEnum = 'Blocked' | 'Unblocked';
    export const BlockStatusEnum = {
        Blocked: 'Blocked' as BlockStatusEnum,
        Unblocked: 'Unblocked' as BlockStatusEnum
    };
    export type ChannelEnum = 'HomeTransfer' | 'Agent' | 'B2B';
    export const ChannelEnum = {
        HomeTransfer: 'HomeTransfer' as ChannelEnum,
        Agent: 'Agent' as ChannelEnum,
        B2B: 'B2B' as ChannelEnum
    };
    export type DeliveryModeEnum = 'Cash' | 'BankAccount' | 'HomeDelivery' | 'FamilySupport' | 'MobilePayment' | 'BillPayment' | 'MutualContributionPayment' | 'PrepaidCard' | 'CashAnywhere' | 'PrepaidCardAcquisition';
    export const DeliveryModeEnum = {
        Cash: 'Cash' as DeliveryModeEnum,
        BankAccount: 'BankAccount' as DeliveryModeEnum,
        HomeDelivery: 'HomeDelivery' as DeliveryModeEnum,
        FamilySupport: 'FamilySupport' as DeliveryModeEnum,
        MobilePayment: 'MobilePayment' as DeliveryModeEnum,
        BillPayment: 'BillPayment' as DeliveryModeEnum,
        MutualContributionPayment: 'MutualContributionPayment' as DeliveryModeEnum,
        PrepaidCard: 'PrepaidCard' as DeliveryModeEnum,
        CashAnywhere: 'CashAnywhere' as DeliveryModeEnum,
        PrepaidCardAcquisition: 'PrepaidCardAcquisition' as DeliveryModeEnum
    };
    export type TransferStatusEnum = 'Registered' | 'Cancelled' | 'CancelledImmediately' | 'Paid' | 'PaymentRollback';
    export const TransferStatusEnum = {
        Registered: 'Registered' as TransferStatusEnum,
        Cancelled: 'Cancelled' as TransferStatusEnum,
        CancelledImmediately: 'CancelledImmediately' as TransferStatusEnum,
        Paid: 'Paid' as TransferStatusEnum,
        PaymentRollback: 'PaymentRollback' as TransferStatusEnum
    };
    export type TypeEnum = 'Sending' | 'Receiving';
    export const TypeEnum = {
        Sending: 'Sending' as TypeEnum,
        Receiving: 'Receiving' as TypeEnum
    };
    export type WatchedStatusEnum = 'Watched' | 'Unwatched';
    export const WatchedStatusEnum = {
        Watched: 'Watched' as WatchedStatusEnum,
        Unwatched: 'Unwatched' as WatchedStatusEnum
    };
}
